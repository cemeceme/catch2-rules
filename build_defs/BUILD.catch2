
subinclude("///cc//build_defs:cc")
subinclude("///cmake//build_defs:cmake")

# Rule to generate the configuration file.
cmake_configure_file(
 name = "config",
 src = "src/catch2/catch_user_config.hpp.in",
 out = "src/catch2/catch_user_config.hpp",
 variables =  # TODO set through plugin configuration.
 {
  "CATCH_CONFIG_CONSOLE_WIDTH":"80",
  "CATCH_CONFIG_DEFAULT_REPORTER":"console",
 },
 visibility = ["PUBLIC"]
)

# List of cmake defines that the bazel rule defines:
#"CATCH_CONFIG_ANDROID_LOGWRITE": "",
#"CATCH_CONFIG_BAZEL_SUPPORT": "CATCH_CONFIG_BAZEL_SUPPORT",
#"CATCH_CONFIG_COLOUR_WIN32": "",
#"CATCH_CONFIG_COUNTER": "",
#"CATCH_CONFIG_CPP11_TO_STRING": "",
#"CATCH_CONFIG_CPP17_BYTE": "",
#"CATCH_CONFIG_CPP17_OPTIONAL": "",
#"CATCH_CONFIG_CPP17_STRING_VIEW": "",
#"CATCH_CONFIG_CPP17_UNCAUGHT_EXCEPTIONS": "",
#"CATCH_CONFIG_CPP17_VARIANT": "",
#"CATCH_CONFIG_DISABLE_EXCEPTIONS_CUSTOM_HANDLER": "",
#"CATCH_CONFIG_DISABLE_EXCEPTIONS": "",
#"CATCH_CONFIG_DISABLE_STRINGIFICATION": "",
#"CATCH_CONFIG_DISABLE": "",
#"CATCH_CONFIG_ENABLE_ALL_STRINGMAKERS": "",
#"CATCH_CONFIG_ENABLE_OPTIONAL_STRINGMAKER": "",
#"CATCH_CONFIG_ENABLE_PAIR_STRINGMAKER": "",
#"CATCH_CONFIG_ENABLE_TUPLE_STRINGMAKER": "",
#"CATCH_CONFIG_ENABLE_VARIANT_STRINGMAKER": "",
#"CATCH_CONFIG_EXPERIMENTAL_REDIRECT": "",
#"CATCH_CONFIG_FALLBACK_STRINGIFIER" : "@CATCH_CONFIG_FALLBACK_STRINGIFIER@",
#"CATCH_CONFIG_FAST_COMPILE": "",
#"CATCH_CONFIG_GETENV": "",
#"CATCH_CONFIG_GLOBAL_NEXTAFTER": "",
#"CATCH_CONFIG_NO_ANDROID_LOGWRITE": "",
#"CATCH_CONFIG_NO_COLOUR_WIN32": "",
#"CATCH_CONFIG_NO_COUNTER": "",
#"CATCH_CONFIG_NO_CPP11_TO_STRING": "",
#"CATCH_CONFIG_NO_CPP17_BYTE": "",
#"CATCH_CONFIG_NO_CPP17_OPTIONAL": "",
#"CATCH_CONFIG_NO_CPP17_STRING_VIEW": "",
#"CATCH_CONFIG_NO_CPP17_UNCAUGHT_EXCEPTIONS": "",
#"CATCH_CONFIG_NO_CPP17_VARIANT": "",
#"CATCH_CONFIG_NO_GETENV": "",
#"CATCH_CONFIG_NO_GLOBAL_NEXTAFTER": "",
#"CATCH_CONFIG_NO_POSIX_SIGNALS": "",
#"CATCH_CONFIG_NO_USE_ASYNC": "",
#"CATCH_CONFIG_NO_EXPERIMENTAL_STATIC_ANALYSIS_SUPPORT": "",
#"CATCH_CONFIG_NO_WCHAR": "",
#"CATCH_CONFIG_NO_WINDOWS_SEH": "",
#"CATCH_CONFIG_NOSTDOUT": "",
#"CATCH_CONFIG_POSIX_SIGNALS": "",
#"CATCH_CONFIG_PREFIX_ALL": "",
#"CATCH_CONFIG_PREFIX_MESSAGES": "",
#"CATCH_CONFIG_SHARED_LIBRARY": "",
#"CATCH_CONFIG_EXPERIMENTAL_STATIC_ANALYSIS_SUPPORT": "",
#"CATCH_CONFIG_USE_ASYNC": "",
#"CATCH_CONFIG_WCHAR": "",
#"CATCH_CONFIG_WINDOWS_CRTDBG": "",
#"CATCH_CONFIG_WINDOWS_SEH": "",


# Rule to build the bulk of catch2, without the main file.
# Note that this only works if needs_transitive_deps is set to false for the rules within cc_library
cc_library(
 name = "catch2",
 srcs = glob("src/**.cpp", "**/catch_main.cpp"),
 hdrs = glob("src/**.hpp"),
 deps = [":config"],
 includes = ["src/"],
 visibility = ["PUBLIC"]
)

# Separate rule for main, as this is configurable for catch2.
cc_library(
 name = "catch2main",
 srcs = ["src/catch2/internal/catch_main.cpp"],
 deps = [":catch2", ":config"],  # For now, re-include config, even though it should be available, but there seems to be a please bug.
 includes = ["src/"],
 visibility = ["PUBLIC"]
)